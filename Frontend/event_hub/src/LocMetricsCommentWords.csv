Word,Count
},22
{,19
from,19
import,18
:,16
the,14
}),13
/>,11
service,10
to,10
worker,9
is,9
});,9
a,8
this.setState({,8
on,8
\127.0.0.1:8000/event/api/Events/get_event_attendees/',{\,7
=,7
.then(res,6
=>,6
=>{,6
\127.0.0.1:8000/comment/api/Comments/get_comments/`,{\,6
<IconText,6
\127.0.0.1:8000/event/api/Events/get_event_registrations/',{\,5
page,5
\127.0.0.1:8000/user/api/Users/get_user_event/',{\,5
,5
updated,5
.catch();,5
\},\,5
if,5
\127.0.0.1:8000/user/api/Users/get_user_events/',{\,4
127.0.0.1:8000/user/api/Requests/get_requests/';,4
</Form.Item>,4
\formData,{\,4
and,4
localhost,4
value:,4
\4,\,4
\'JazzCash',\,4
event:,4
this,4
\127.0.0.1:8000/event/api/Images/add_images/',\,4
</b>,4
label:,4
be,4
This,4
<Button,4
const,4
}},4
<div>,4
row,4
eventID,4
are,4
click,4
Cannot,3
res.data,3
</div>,3
\127.0.0.1:8000/event/api/Events/get_event/',{\,3
app,3
that,3
\127.0.0.1:8000/event/api/Events/delete_event/',{\,3
user,3
\127.0.0.1:8000/user/api/Users/get_user/',{\,3
for,3
\true,\,3
of,3
events:,3
required:,3
height={300},3
axios,3
\127.0.0.1:8000/notification/api/Notifications/get_notifications/',{\,3
\,\,3
rules:,3
\127.0.0.1:8000/event/api/Events/get_event_payments/',{\,3
style={{,3
message:,3
'axios';,3
\127.0.0.1:8000/event/api/Events/update_event/',{\,3
<Form.Item,3
offline,3
it,3
[{,3
(,3
not,3
\/>,\,3
width={270},3
\Photos"\,\,3
in,3
'Please,3
\[],\,3
found,3
/>)},3
componentDidMount(){,3
\}],\,3
all,3
been,3
127.0.0.1:8000${item.image}`},3
you,3
\type="\message"\\,2
min={1},2
127.0.0.1:8000/event/api/Events/get_type_events/';,2
CustomLayout2,2
width={272},2
subsequent,2
\{getFieldDecorator('number_of_tickets',\,2
register,2
precached,2
still,2
CustomLayout3,2
e,2
cached,2
learn,2
by,2
can,2
callback,2
127.0.0.1:8000/event/api/Events/get_admin_events_happening_today/'),2
event,2
marginRight:,2
'./containers/App2';,2
see,2
\'CreditCard',\,2
serve,2
\key="\list-vertical-message"\\,2
\method:values.method,\,2
\127.0.0.1:8000/user/api/Requests/disapprove_request/',{\,2
\127.0.0.1:8000/attendee/api/Attendees/add_attendees/',{\,2
\label="\Select\,2
\type="\star-o"\\,2
127.0.0.1:8000/event/api/Events/get_admin_events/'),2
\127.0.0.1:8000/user/api/Requests/approve_request/',{\,2
127.0.0.1:8000/user/api/OrganizerRequests/get_requests/';,2
will,2
127.0.0.1:8000/event/api/Events/get_admin_events_happened/'),2
<img,2
\type="\primary"\><Link\,2
Badge,2
'./containers/Layout2';,2
images3:,2
\key="\list-vertical-star-o"\\,2
\type="\like-o"\\,2
developers,2
work,2
more,2
\key="\list-vertical-like-o"\\,2
\btnText:"\See\,2
used,2
127.0.0.1:8000/user/api/Users/get_user_events_category/';,2
else{,2
);,2
'./containers/Layout3';,2
load,2
some,2
If,2
Execute,2
App2,2
height={272},2
Tickets!',2
\Tickets"\>\,2
\alt="\logo"\\,2
content,2
register(),2
CustomLayout,2
Number,2
127.0.0.1:8000/user/api/Users/get_admins/'),2
visits,2
has,2
\axios.post('http://127.0.0.1:8000/event/api/Registrations/get_registered_events/',{\,2
default,2
about,2
At,2
Select,2
127.0.0.1:8000/event/api/Events/get_admin_events_approved/'),2
2,2
images2:,2
\127.0.0.1:8000/event/api/Events/get_event_registrations_and_payments/',{\,2
\127.0.0.1:8000/user/api/OrganizerRequests/disapprove_request/',{\,2
127.0.0.1:8000/user/api/Users/get_admin_organizers/'),2
'Credit,2
tabs,2
127.0.0.1:8000${props.images[index].image}`},2
\127.0.0.1:8000/user/api/OrganizerRequests/approve_request/',{\,2
parseInt(localStorage.getItem('user'))!==item.user,2
\type="\primary"\\,2
</Card>,2
<a,2
'./containers/Layout';,2
127.0.0.1:8000/user/api/Users/get_admin_users/'),2
\point,\,2
https://bit.ly/CRA-PWA,2
})(<InputNumber,2
different,2
\Card',\,2
available,1
\However,\,1
comes,1
<Carousel1,1
happen,1
Ensure,1
(!err),1
pageSize:,1
or,1
getFieldDecorator,1
IconText,1
<b>Payments,1
Event,1
to={`/event/myEvents/${item.id}/`}>Details</Link></Button>,1
lets,1
Proceed,1
127.0.0.1:8000/user/api/Requests/get_user_requests_type/';,1
closed,1
if(!localStorage.getItem('token')){window.location.href='/login/';},1
/>},1
'react';,1
we,1
considered,1
perfect,1
this.props.form;,1
<Images,1
console.log(page);,1
key={item.title},1
constructor,1
onChange:,1
this.state.event.limit_for_tickets!==null,1
called,1
\btnText:"\Hide\,1
\closed,\,1
replies:res.data.replies,1
\page,\,1
history,1
<Card.Title><h4>{item.venue}</h4></Card.Title>,1
text={item.sold_tickets},1
<span/>,1
code,1
<Form.Item>,1
\itemLayout="\vertical"\\,1
\Card,\,1
\axios.post('http://127.0.0.1:8000/event/api/Events/get_history/',{\,1
<Card>,1
bit.ly/CRA-PWA',1
JS,1
\status="\YES"\/>\,1
\"\Content\,1
8,1
\127.0.0.1:8000/notification/api/Notifications/read_notification/',{\,1
Avatar,1
what,1
Probably,1
\127.0.0.1:8000/event/api/Registrations/get_registration/',{\,1
\127.0.0.1:8000/event/api/Events/get_request_data/',{\,1
max={this.state.event.remaining_tickets},1
footer={,1
Service,1
comments:,1
event={this.props.match.params.eventID}/>,1
as,1
bit.ly/CRA-PWA.',1
\127.0.0.1:8000/user/api/Users/activate/',{\,1
IPv6,1
\16,\,1
text={this.state.event.total_tickets},1
support,1
127.0.0.1:8000/user/api/OrganizerRequests/delete_organizer_request/';,1
onSubmit={this.handleSubmit}>,1
127.0.0.1:8000/user/api/OrganizerRequests/get_requests_type/';,1
category!',1
address,1
deployed,1
origin,1
(and,1
It's,1
\Form,\,1
\2,\,1
really,1
<span,1
Created,1
message,1
Carousel1,1
<Card,1
<List.Item,1
\localhost,\,1
pagination={{,1
\if(this.state.btnText==="\See\,1
127.0.0.1:8000/event/api/Images/${id}`),1
InputNumber,1
\this.props.match.params.eventID,\,1
gutter:,1
worker/PWA,1
everything,1
jest,1
\use."\\,1
window.location.reload(false);,1
Our,1
https://github.com/facebook/create-react-app/issues/2374,1
this.state.images3===null,1
change,1
previous,1
URL,1
\opt-in,\,1
\values.number_of_tickets,\,1
Reload,1
\127.0.0.1:8000/notification/api/Notifications/read_all_notifications/',{\,1
\replies:[],\,1
column:,1
\Button,\,1
SW,1
(){,1
title={,1
src={`http://127.0.0.1:8000${item.image}`},1
this.state.event.remaining_tickets,1
read,1
xl:,1
'../components/Comments';,1
logging,1
unregister(),1
optional,1
\label="\Method"\>\,1
\Icon,\,1
description={item.category}/>,1
values),1
our,1
https://github.com/testing-library/jest-dom,1
\127.0.0.1:8000/event/api/Registrations/add_registration/',{\,1
open,1
}}>{text}</span>,1
jest-dom,1
actions={[,1
<b>Attendees,1
time,1
comments={this.state.comments},1
\127.0.0.1:8000/event/api/Events/add_event/',{\,1
additional,1
price,1
*,1
if(values.number_of_tickets>0){,1
'#2db7f5',1
text={item.price_ticket},1
options={methods},1
({,1
replies={this.state.replies},1
getting,1
\renderItem={(item,\,1
can't,1
<b>Sold,1
means,1
adds,1
total_amount,1
${10}`},1
\parseInt(localStorage.getItem("\user"\))\,1
images:,1
text={this.state.event.price_ticket},1
127.0.0.1:8000/user/api/OrganizerRequests/get_organizer_request/';,1
src={item.avatar},1
xxl:,1
sm:,1
Check,1
Images,1
<Card.Body>,1
this.state.event.price_ticket,1
how,1
allows,1
Â©2020,1
EventDetailView;,1
PUBLIC_URL,1
Tickets,1
\127.0.0.1:8000/user/api/Organizers/update_organizer/',{\,1
'../elements/carousel',1
React,1
pitfalls,1
'./Apps/App';,1
\127.0.0.1:8000/attendee/api/Attendees/save_feedback/`,{\,1
workers:,1
but,1
\if(this.state.event.status==="\HAPPENED"\){\,1
<App,1
also,1
text={this.state.event.sold_tickets},1
The,1
history:,1
'../components/Event',1
<Form,1
\127.0.0.1:8000/comment/api/Comments/add_reply/',{\,1
exists,1
\production,\,1
<Badge,1
since,1
normal,1
\}</div>,\,1
users),1
number_of_tickets,1
null,1
\127.0.0.1:8000/event/api/Registrations/get_registrations/',{\,1
return,1
Industries,1
></Badge>,1
</span>,1
\axios.post(`http://127.0.0.1:8000/comment/api/Comments/get_comments/`,{\,1
served,1
<span>,1
127.0.0.1:8000/event/api/Registrations/get_registrations_category/';,1
below,1
\:values.number_of_tickets,\,1
max={this.state.event.limit_for_tickets},1
methods,1
</Form>,1
\127.0.0.1:8000/event/api/Events/get_event/`,{\,1
pointing,1
user={this.state.event.user}/>,1
won't,1
assets;,1
model,1
Just,1
things,1
'../components/Images';,1
127.0.0.1:8000/event/api/Registrations/get_registrations/';,1
type:,1
EventDetail,1
Note,1
Comments,1
custom,1
src={`http://127.0.0.1:8000${props.images[index].image}`},1
\Cascader,\,1
No,1
this.state.event.limit_for_tickets,1
\htmlType="\submit"\>\,1
App,1
\axios.post(`http://127.0.0.1:8000/event/api/Events/get_event/`,{\,1
[::1],1
with,1
<List,1
gives,1
Add,1
data={this.state.history},1
127.0.0.1:8000/event/api/Events/get_events/'),1
older,1
extends,1
handleOnClick,1
grid={{,1
\127.0.0.1:8000/comment/api/Comments/add_comment/',{\,1
DOM,1
</List.Item>,1
\window.location.href="\/login/"\;\,1
resources,1
4,1
previously,1
res.data.images,1
state,1
your,1
images={this.state.images},1
)},1
\if(!localStorage.getItem("\token"\)){\,1
have,1
type={type},1
instructions,1
want,1
do,1
Is,1
count={`Registrations,1
display,1
\res.data.comments,\,1
\this.props.form.validateFieldsAndScroll((err,\,1
Usama,1
\this.state.event.status==="\APPROVED"\\,1
render,1
\images3:null,\,1
<b>EventHub,1
text,1
\type,\,1
Save,1
\3,\,1
text={item.total_tickets},1
dataSource={props.data},1
images:res.data.images,1
might,1
\127.0.0.1:8000/user/api/Requests/get_user_requests/',{\,1
updates,1
after,1
\size="\large"\\,1
];,1
\1,\,1
select,1
\Photos"\){\,1
capabilities,1
<Comments,1
\fetched,\,1
To,1
client,1
\exists,\,1
\127.0.0.1:8000/user/api/Organizers/add_organizer/',{\,1
\127.0.0.1:8000/rest-auth/registration/',{\,1
reload,1
xs:,1
Learn,1
\comments:[],\,1
\res.data.events,\,1
data={this.state.images3},1
[,1
avatar={<Avatar,1
href={`/event/myEvents/${item.id}/`}><h3>{item.title}</h3></a>,1
only,1
&&,1
CDN,1
title={this.state.event.title}>,1
<Icon,1
</Card.Body>,1
check,1
matchers,1
export,1
background,1
\res.data.event,\,1
Let's,1
index),1
benefits,1
file,1
images={this.state.images2}/>,1
\{getFieldDecorator('method',\,1
\:this.state.event.price_ticket,\,1
IPv4,1
like:,1
this.state.images,1
e.preventDefault();,1
\20,\,1
<p>{this.state.event.description}</p>,1
<Event,1
<List.Item.Meta,1
to={`/events/${item.id}/`}>Register</Link></Button>,1
existing,1
<,1
127.0.0.1:8000/user/api/Requests/get_user_requests/';,1
</Button>,1
this.props.match.params.eventID;,1
nodes,1
running,1
'antd';,1
]}>,1
})(<Cascader,1
lg:,1
backgroundColor:,1
handleSubmit,1
more:,1
\127.0.0.1:8000/attendee/api/Attendees/check_feedback/`,{\,1
faster,1
\127.0.0.1:8000/user/api/Users/get_complete_user_data/',{\,1
expect(element).toHaveTextContent(/react/i),1
\{},\,1
class,1
md:,1
href={`/events/${item.id}/`}><h3>{item.title}</h3></a>,1
asserting,1
onClick={this.handleOnClick}>{this.state.btnText}</Button>,1
127.0.0.0/8,1
documentation,1
\faster,\,1
until,1
127.0.0.1:8000/user/api/Requests/get_requests_type/';,1
\127.0.0.1:8000/rest-auth/login/',{\,1
\127.0.0.1:8000/user/api/Users/mark_attendence/',{\,1
React.Component{,1
\axios.post('http://127.0.0.1:8000/event/api/Registrations/add_registration/',{\,1
\'array',\,1
browsers,1
